
stm32h7-asm.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  24000000  24000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000000ec  24000298  24000298  00010298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  24000384  24000384  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  24000384  24000384  00010384  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  24000388  24000388  00010388  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000010  20000000  2400038c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  20000010  2400039c  00020010  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  2000002c  2400039c  0002002c  2**0
                  ALLOC
  8 .ARM.attributes 0000002e  00000000  00000000  00020010  2**0
                  CONTENTS, READONLY
  9 .comment      00000043  00000000  00000000  0002003e  2**0
                  CONTENTS, READONLY
 10 .debug_line   00000154  00000000  00000000  00020081  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 0000014b  00000000  00000000  000201d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_info   0000006b  00000000  00000000  00020320  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000003a  00000000  00000000  0002038b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000068  00000000  00000000  000203c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    00000157  00000000  00000000  00020430  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000019  00000000  00000000  00020587  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_frame  0000060c  00000000  00000000  000205a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

24000298 <__do_global_dtors_aux>:
24000298:	b510      	push	{r4, lr}
2400029a:	4c05      	ldr	r4, [pc, #20]	; (240002b0 <__do_global_dtors_aux+0x18>)
2400029c:	7823      	ldrb	r3, [r4, #0]
2400029e:	b933      	cbnz	r3, 240002ae <__do_global_dtors_aux+0x16>
240002a0:	4b04      	ldr	r3, [pc, #16]	; (240002b4 <__do_global_dtors_aux+0x1c>)
240002a2:	b113      	cbz	r3, 240002aa <__do_global_dtors_aux+0x12>
240002a4:	4804      	ldr	r0, [pc, #16]	; (240002b8 <__do_global_dtors_aux+0x20>)
240002a6:	f3af 8000 	nop.w
240002aa:	2301      	movs	r3, #1
240002ac:	7023      	strb	r3, [r4, #0]
240002ae:	bd10      	pop	{r4, pc}
240002b0:	20000010 	.word	0x20000010
240002b4:	00000000 	.word	0x00000000
240002b8:	2400036c 	.word	0x2400036c

240002bc <frame_dummy>:
240002bc:	b508      	push	{r3, lr}
240002be:	4b03      	ldr	r3, [pc, #12]	; (240002cc <frame_dummy+0x10>)
240002c0:	b11b      	cbz	r3, 240002ca <frame_dummy+0xe>
240002c2:	4903      	ldr	r1, [pc, #12]	; (240002d0 <frame_dummy+0x14>)
240002c4:	4803      	ldr	r0, [pc, #12]	; (240002d4 <frame_dummy+0x18>)
240002c6:	f3af 8000 	nop.w
240002ca:	bd08      	pop	{r3, pc}
240002cc:	00000000 	.word	0x00000000
240002d0:	20000014 	.word	0x20000014
240002d4:	2400036c 	.word	0x2400036c

240002d8 <main>:
  		.type  main, %function
  		.global main

   	   	.align
main:
  		ldr r0, =STEV1   // Naslov od STEV1 -> r0
240002d8:	4804      	ldr	r0, [pc, #16]	; (240002ec <__end+0x4>)
  		ldr r1, [r0]    // Vsebina iz naslova v r0 -> r1
240002da:	6801      	ldr	r1, [r0, #0]

  		ldr r0, =STEV2   // Naslov od STEV1 -> r0
240002dc:	4804      	ldr	r0, [pc, #16]	; (240002f0 <__end+0x8>)
  		ldr r2, [r0]	// Vsebina iz naslova v r0 -> r2
240002de:	6802      	ldr	r2, [r0, #0]

  		add r3,r1,r2    // r1 + r2 -> r3
240002e0:	eb01 0302 	add.w	r3, r1, r2

  		ldr r0, =VSOTA   // Naslov od STEV1 -> r0
240002e4:	4803      	ldr	r0, [pc, #12]	; (240002f4 <__end+0xc>)
  		str r3,[r0]		// iz registra r3 -> na naslov v r0
240002e6:	6003      	str	r3, [r0, #0]

240002e8 <__end>:

__end: 	b 	__end
240002e8:	e7fe      	b.n	240002e8 <__end>
240002ea:	0000      	.short	0x0000
  		ldr r0, =STEV1   // Naslov od STEV1 -> r0
240002ec:	20000004 	.word	0x20000004
  		ldr r0, =STEV2   // Naslov od STEV1 -> r0
240002f0:	20000008 	.word	0x20000008
  		ldr r0, =VSOTA   // Naslov od STEV1 -> r0
240002f4:	2000000c 	.word	0x2000000c

240002f8 <Reset_Handler>:

  .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
240002f8:	f8df d048 	ldr.w	sp, [pc, #72]	; 24000344 <LoopFillZerobss+0x26>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
240002fc:	4812      	ldr	r0, [pc, #72]	; (24000348 <LoopFillZerobss+0x2a>)
  ldr r1, =_edata
240002fe:	4913      	ldr	r1, [pc, #76]	; (2400034c <LoopFillZerobss+0x2e>)
  ldr r2, =_sidata
24000300:	4a13      	ldr	r2, [pc, #76]	; (24000350 <LoopFillZerobss+0x32>)
  movs r3, #0
24000302:	2300      	movs	r3, #0
  b LoopCopyDataInit
24000304:	e002      	b.n	2400030c <LoopCopyDataInit>

24000306 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
24000306:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
24000308:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
2400030a:	3304      	adds	r3, #4

2400030c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
2400030c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
2400030e:	428c      	cmp	r4, r1
  bcc CopyDataInit
24000310:	d3f9      	bcc.n	24000306 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
24000312:	4a10      	ldr	r2, [pc, #64]	; (24000354 <LoopFillZerobss+0x36>)
  ldr r4, =_ebss
24000314:	4c10      	ldr	r4, [pc, #64]	; (24000358 <LoopFillZerobss+0x3a>)
  movs r3, #0
24000316:	2300      	movs	r3, #0
  b LoopFillZerobss
24000318:	e001      	b.n	2400031e <LoopFillZerobss>

2400031a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
2400031a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
2400031c:	3204      	adds	r2, #4

2400031e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
2400031e:	42a2      	cmp	r2, r4
  bcc FillZerobss
24000320:	d3fb      	bcc.n	2400031a <FillZerobss>

// Initialize DWT counters - added for cycle measurements
  ldr r0, =DEMCR
24000322:	480e      	ldr	r0, [pc, #56]	; (2400035c <LoopFillZerobss+0x3e>)
  ldr r1, [r0]
24000324:	6801      	ldr	r1, [r0, #0]
  orr r1,r1,#(1<<24)  // Enabling TRCENA bit (is already on according to SFRs)
24000326:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
  str r1, [r0]
2400032a:	6001      	str	r1, [r0, #0]

  ldr r0, =DWT_CYCCNT
2400032c:	480c      	ldr	r0, [pc, #48]	; (24000360 <LoopFillZerobss+0x42>)
  mov r3,#0
2400032e:	f04f 0300 	mov.w	r3, #0
  str r3,[r0]
24000332:	6003      	str	r3, [r0, #0]

  ldr r0, =DWT_CTRL
24000334:	480b      	ldr	r0, [pc, #44]	; (24000364 <LoopFillZerobss+0x46>)
  ldr r2, [r0]
24000336:	6802      	ldr	r2, [r0, #0]
  orr r2,r2,#1      // Enabling CYCCNTENA bit
24000338:	f042 0201 	orr.w	r2, r2, #1
  str r2, [r0]
2400033c:	6002      	str	r2, [r0, #0]

/* Call the application's entry point.*/
//eternal:  b  eternal
  bl  main
2400033e:	f7ff ffcb 	bl	240002d8 <main>
  bx  lr
24000342:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
24000344:	20020000 	.word	0x20020000
  ldr r0, =_sdata
24000348:	20000000 	.word	0x20000000
  ldr r1, =_edata
2400034c:	20000010 	.word	0x20000010
  ldr r2, =_sidata
24000350:	2400038c 	.word	0x2400038c
  ldr r2, =_sbss
24000354:	20000010 	.word	0x20000010
  ldr r4, =_ebss
24000358:	2000002c 	.word	0x2000002c
  ldr r0, =DEMCR
2400035c:	e000edfc 	.word	0xe000edfc
  ldr r0, =DWT_CYCCNT
24000360:	e0001004 	.word	0xe0001004
  ldr r0, =DWT_CTRL
24000364:	e0001000 	.word	0xe0001000

24000368 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
24000368:	e7fe      	b.n	24000368 <ADC3_IRQHandler>
	...

2400036c <_init>:
2400036c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2400036e:	bf00      	nop
24000370:	bcf8      	pop	{r3, r4, r5, r6, r7}
24000372:	bc08      	pop	{r3}
24000374:	469e      	mov	lr, r3
24000376:	4770      	bx	lr

24000378 <_fini>:
24000378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2400037a:	bf00      	nop
2400037c:	bcf8      	pop	{r3, r4, r5, r6, r7}
2400037e:	bc08      	pop	{r3}
24000380:	469e      	mov	lr, r3
24000382:	4770      	bx	lr
